#
#
# 感谢p3terx大神的一键编译脚本
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# <https://github.com/P3TERX/Actions-OpenWrt.git>
#
#修改以下代码或者开启触发开关都好，要严格按格式对好,前面有多少空格也要看清楚
#代码里有 name: 后面的内容随便改,冒号后面是有个空格的,如果修改固件名字就要考虑能不能显示出你想要的


name: Lienol-19.07-OpenWrt 固件

on:
  repository_dispatch:

#编辑任意指定文件触发开始编译(去掉下面5个#开启,最下面一行是指定修改什么文件就触发编译,我现在是修改diy.config文件触发)
  push:
    branches:
      - master
    paths:
      - 'Lienol-19.07/开启编译Lienol-19.07'


#定时触发开始编译(开启定时编译请先关闭SSH,要不然SSH没人管,会卡SSH编译失败)
#  schedule:
#    - cron: 0 8 */9 * *


#点☆Star触发开始编译
  watch:
#    types: started

env:
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  SCKEY: ${{ secrets.SCKEY }}
  SERVERCHAN: Lienol的19.07固件
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    name: 编译 ${{matrix.target}} 固件
    strategy:
      fail-fast: false
      matrix:
        target: [Lienol-19.07]

    steps:
    - name: 准备结束
      uses: actions/checkout@main   

    - name: 开始编译,微信通知
      if: env.SERVERCHAN_SCKEY
      run: curl https://sc.ftqq.com/${{ secrets.SCKEY }}.send?text=开始编译${{ env.SERVERCHAN }}

    - name: 把开关转到根目录【${{matrix.target}}】｛Settings.ini｝
      run: |
        source "${GITHUB_WORKSPACE}/${{matrix.target}}/settings.ini"
        echo "::set-env name=REPO_URL::${REPO_URL}"
        echo "::set-env name=REPO_BRANCH::${REPO_BRANCH}"
        echo "::set-env name=FEEDS_CONF::${FEEDS_CONF}"
        echo "::set-env name=CONFIG_FILE::${CONFIG_FILE}"
        echo "::set-env name=DIY_P1_SH::${DIY_P1_SH}"
        echo "::set-env name=DIY_P2_SH::${DIY_P2_SH}"
        echo "::set-env name=SSH_ACTIONS::${SSH_ACTIONS}"
        echo "::set-env name=UPLOAD_BIN_DIR::${UPLOAD_BIN_DIR}"
        echo "::set-env name=UPLOAD_CONFIG::${UPLOAD_CONFIG}"
        echo "::set-env name=UPLOAD_FIRMWARE::${UPLOAD_FIRMWARE}"
        echo "::set-env name=UPLOAD_COWTRANSFER::${UPLOAD_COWTRANSFER}"
        echo "::set-env name=UPLOAD_WETRANSFER::${UPLOAD_WETRANSFER}"
        echo "::set-env name=UPLOAD_RELEASE::${UPLOAD_RELEASE}"
        echo "::set-env name=SERVERCHAN_SCKEY::${SERVERCHAN_SCKEY}"
    
    - name: 开始安装编译所需系统
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 下载固件源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 加载feeds跟自定义插件
      run: |
        [ -e ${{matrix.target}}/$FEEDS_CONF ] && mv ${{matrix.target}}/$FEEDS_CONF openwrt/feeds.conf.default
        chmod +x ${{matrix.target}}/$DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/${{matrix.target}}/$DIY_P1_SH

    - name: 下载feeds跟安装自定义插件
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 加载diy.config设置
      run: |
        [ -e ${{matrix.target}}/files ] && mv ${{matrix.target}}/files openwrt/files
        [ -e ${{matrix.target}}/$CONFIG_FILE ] && mv ${{matrix.target}}/$CONFIG_FILE openwrt/.config
        chmod +x ${{matrix.target}}/$DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/${{matrix.target}}/$DIY_P2_SH

    - name: SSH远程连接服务器配置固件
      uses: P3TERX/debugger-action@main
      if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')

    - name: 下载软件包
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 开始编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "::set-env name=DEVICE_NAME::$(cat DEVICE_NAME)"
        echo "::set-env name=FILE_DATE::$(date "+%Y-%m-%d %H.%M.%S")"

    - name: 检查github储存空间情况
      if: (!cancelled())
      run: df -hT

    - name: 上传bin文件夹(固件+ipk)在github空间
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: CeShi_bin_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: 提取config.buildinfo配置文件
      id: config
      run: |
          rm -rf config && mkdir config
          find openwrt/bin/targets/ -name "*config.buildinfo*" | xargs -i mv -f {} config
          echo "::set-output name=status::success"
    - name: 上传.config配置文件在github空间    
      if: steps.config.outputs.status == 'success' && env.UPLOAD_CONFIG == 'true'
      uses: actions/upload-artifact@main
      with:
        name: config.buildinfo_${{ env.FILE_DATE }}
        path: ./config

    - name: 整理固件文件夹
      id: organizer
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages && mkdir packages
        find -name "*.buildinfo*" | xargs -i mv -f {} packages
        find -name "*sha256sums*" | xargs -i mv -f {} packages
        find -name "*kernel.bin*" | xargs -i mv -f {} packages
        find -name "*rootfs.img*" | xargs -i mv -f {} packages
        find -name "*.manifest*" | xargs -i mv -f {} packages
        rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"
        
    - name: 上传固件在github空间
      uses: actions/upload-artifact@main
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true'
      with:
        name: CeShi_firmware_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: 上传固件到奶牛快传（国内高速下载）
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-env name=COWTRANSFER_URL::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"
    
    - name: 上传固件到WeTransfer（国外高速下载）
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-env name=WETRANSFER_URL::$(cat wetransfer.log | grep https | cut -f3 -d" ")"
    
    - name: 发布奶牛快传和WeTransfer链接
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-env name=date1::$(date "+%Y年%m月%d号-%H点%M分%S秒")"
        echo "::set-env name=date2::$(date "+%d号%k点%M分")"
        echo "🏅 ${{ env.DEVICE_NAME }}固件下载 ✨:" >> release.txt
        echo "" >> release.txt
        echo "💐 奶牛快传(国内高速下载)： ${{ env.COWTRANSFER_URL }} 🚀" >> release.txt
        echo "" >> release.txt
        echo "🗽 WeTransfer(国外高速下载)： ${{ env.WETRANSFER_URL }} 🚀" >> release.txt
        echo "" >> release.txt
        echo "🌴 链接发布于 ${{ env.date2 }} ，链接有效期为7天，无需注册直接下载 🐤" >> release.txt
        echo "::set-output name=status::success"
    
    - name: 发布固件
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
        tag_name: ${{ env.date1 }}-${{matrix.target}}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: 编译结束,微信通知
      if: env.SERVERCHAN_SCKEY
      run: curl https://sc.ftqq.com/${{ secrets.SCKEY }}.send?text=${{ env.SERVERCHAN }}编译结束(${{ env.date2 }})
